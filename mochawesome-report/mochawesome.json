{
  "stats": {
    "suites": 2,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-06T12:46:22.380Z",
    "end": "2023-07-06T12:46:24.510Z",
    "duration": 2130,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2d1f567a-1c59-4575-82d5-25b32fb4529d",
      "title": "",
      "fullFile": "/home/arcgate/Desktop/todo/test/user.spec.js",
      "file": "/test/user.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "95c314d9-d21f-4da8-9735-f3c1d9ecc48a",
          "title": "------Tasks API---------",
          "fullFile": "/home/arcgate/Desktop/todo/test/user.spec.js",
          "file": "/test/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
              "title": "post-api",
              "fullFile": "/home/arcgate/Desktop/todo/test/user.spec.js",
              "file": "/test/user.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"post-api\"",
                  "fullTitle": "------Tasks API--------- post-api \"before all\" hook in \"post-api\"",
                  "timedOut": false,
                  "duration": 10,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await userModel.deleteMany();",
                  "err": {},
                  "uuid": "99b1e644-a25b-4315-b7de-2cd0cd6da607",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before all\" hook in \"post-api\"",
                  "fullTitle": "------Tasks API--------- post-api \"before all\" hook in \"post-api\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await blogModel.deleteMany();",
                  "err": {},
                  "uuid": "09504a27-20c4-4b97-b6d8-c336845bc1a2",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "api should submit the following data",
                  "fullTitle": "------Tasks API--------- post-api api should submit the following data",
                  "timedOut": false,
                  "duration": 88,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post(\"/api/user/registration\")\n    .send(userData)\n    .end((error, response) => {\n      user_id = response.body.data._id\n      expect(response.status).to.be.equal(201);\n      expect(response.body.message).to.be.equal(\n        \"user created successfully\"\n      );\n      expect(response.body.data).to.be.a(\"object\");\n      expect(response.body.data).to.not.be.empty;\n      expect(response.body.data).to.have.all.keys(\n        \"_id\",\n        \"username\",\n        \"first_name\",\n        \"last_name\",\n        \"email\",\n        \"password\",\n        \"phone\",\n        \"profile\",\n        \"role\",\n        \"createdAt\",\n        \"updatedAt\",\n        \"__v\"\n      );\n      done();\n    });",
                  "err": {},
                  "uuid": "010f2be7-891c-4008-96da-ced287b8184d",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "api should not submit the data and throw the error 'User already exists go and login'",
                  "fullTitle": "------Tasks API--------- post-api api should not submit the data and throw the error 'User already exists go and login'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n        .request(server)\n        .post(\"/api/user/registration\")\n        .send(userData)\n        .end((error, response) => {\n          expect(response.status).to.be.equal(400);\n          expect(response.body.message).to.be.equal(\n            \"User already exists go and login\"\n          );\n        });",
                  "err": {},
                  "uuid": "4302b2a5-809a-44a4-aca5-ef9c3fede5e0",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "user login succesfully",
                  "fullTitle": "------Tasks API--------- post-api user login succesfully",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/userlogin\")\n  .send({ email: \"khus.vijay@gmail.com\", password: \"12345678\" })\n  .end((err, response) => {\n    token = response.body.accessToken;\n    expect(response.status).to.be.equal(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "541dff0c-09f0-44e0-bb34-0b080d4f526c",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enter invalid email ",
                  "fullTitle": "------Tasks API--------- post-api enter invalid email ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/userlogin\")\n  .send({ email: \"SFDJSFGSDJ@GMAIL.COMN\", password: \"jdhfjs\" })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(404);\n    expect(response.body.error).to.be.equal(\n      '\"email\" must be a valid email'\n    );\n    done();\n  });",
                  "err": {},
                  "uuid": "88ec0a9f-42cd-4c56-9aba-e8e67489fba5",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enter valid email but not exist in database",
                  "fullTitle": "------Tasks API--------- post-api enter valid email but not exist in database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/userlogin\")\n  .send({ email: \"ravindra.dabi@gmail.com\", password: \"jdhfjs\" })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(404);\n    expect(response.body.message).to.be.equal(\n      \"User not exists...enter correct email or register yourself first\"\n    );\n    done();\n  });",
                  "err": {},
                  "uuid": "6f3fd0b6-22b1-48b7-b02d-9c2dc0d2f29e",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enter correct email and incorrect password",
                  "fullTitle": "------Tasks API--------- post-api enter correct email and incorrect password",
                  "timedOut": false,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/userlogin\")\n  .send({ email: \"khus.vijay@gmail.com\", password: \"jdhfjs\" })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(404);\n    expect(response.body.message).to.be.equal(\"Wrong password\");\n    done();\n  });",
                  "err": {},
                  "uuid": "943db580-6987-4cf1-99f9-ab8536ca5a49",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get all user api only admin can access",
                  "fullTitle": "------Tasks API--------- post-api Get all user api only admin can access",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/user/getall\")\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n   expect(response.text).to.be.equal(\"you are not an admin\")\n    done();\n  });",
                  "err": {},
                  "uuid": "6a593397-ab38-4e84-9fb8-38d9a22994cf",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get user api",
                  "fullTitle": "------Tasks API--------- post-api Get user api",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let username = \"khushi\"\nchai\n  .request(server)\n  .get(\"/api/user/\" + username)\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n   // expect(response.body.message).to.be.equal(\"new password and confirm password are not equal\")\n    done();\n  });",
                  "err": {},
                  "uuid": "fe50f3b2-8063-40b6-b220-7df11fb111bc",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get user api when username is not send or enter the invalid username",
                  "fullTitle": "------Tasks API--------- post-api Get user api when username is not send or enter the invalid username",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let username = undefined\nchai\n  .request(server)\n  .get(\"/api/user/\" + username)\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n   expect(response.text).to.be.equal(\"enter the username or username is not valid\")\n    done();\n  });",
                  "err": {},
                  "uuid": "125c41be-c0c3-429c-a33f-116de8d16729",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update the userdata using username",
                  "fullTitle": "------Tasks API--------- post-api Update the userdata using username",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let username = \"khushi\"\nchai\n  .request(server)\n  .patch(\"/api/user/\" + username)\n  .set('Authorization', `Bearer ${token}`)\n  .send({phone : \"4566544567\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(201);\n    done();\n  });",
                  "err": {},
                  "uuid": "dfa8efdb-f748-4b7e-bf4d-5607a7d02284",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update the userdata using invalid username",
                  "fullTitle": "------Tasks API--------- post-api Update the userdata using invalid username",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let username = undefined\nchai\n  .request(server)\n  .patch(\"/api/user/\" + username)\n  .set('Authorization', `Bearer ${token}`)\n  .send({phone : \"4566544567\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "d5340969-7096-4c31-bd5f-29e900193716",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "blog post api",
                  "fullTitle": "------Tasks API--------- post-api blog post api",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/blog/create\")\n  .set('Authorization', `Bearer ${token}`)\n  .send({\n    \"title\" : \"this is my blog\",\n    \"image\" : \"https://images.unsplash.com/photo-1503023345310-bd7c1de61c7d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8aHVtYW58ZW58MHx8MHx8fDA%3D&auto=format&fit=crop&w=500&q=60\",\n    \"description\" : \"a standing person\",\n    \"created_by\" : user_id\n  })\n  .end((err, response) => {\n    id = response.body.data._id\n    expect(response.status).to.be.equal(201);\n    done();\n  });",
                  "err": {},
                  "uuid": "fbca1fb1-698b-4b1e-ab44-3f1496de3d6c",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "blog get alll",
                  "fullTitle": "------Tasks API--------- post-api blog get alll",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/blog/getall\")\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "55278bcb-ef9c-4bf5-b233-783b04c9f715",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "get single blog",
                  "fullTitle": "------Tasks API--------- post-api get single blog",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/blog/get/\" + id)\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "d637169f-fe6b-4b66-98a7-2ed438f86d36",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "update the blog",
                  "fullTitle": "------Tasks API--------- post-api update the blog",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .patch(\"/api/blog/update/\" + id)\n  .set('Authorization', `Bearer ${token}`)\n  .send({title : \"update the title of the blog\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "085d25d2-7ac8-472a-8e24-20454dc81c10",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "delete the blog",
                  "fullTitle": "------Tasks API--------- post-api delete the blog",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .delete(\"/api/blog/delete/\" + id)\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "89ef9b2e-c773-4606-9908-f93401a6f685",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "generate token",
                  "fullTitle": "------Tasks API--------- post-api generate token",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/generatetoken\")\n  .send({\n    token:\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTNmNWY2NjQ1NWJjMjViZWIzMGZlZCIsImlhdCI6MTY4NzkzNDY2OCwiZXhwIjoxNzE5NDkyMjY4fQ.Dma56rxkCcnmqvKZn5epU6VmnA8XZdTgK6lI22HW0bM\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "1c4bb62c-fe27-44ec-a62e-d42057202109",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user not send the token while generating the token",
                  "fullTitle": "------Tasks API--------- post-api when user not send the token while generating the token",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/generatetoken\")\n  .send()\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "b58989f7-b490-4550-b0ba-dd5538dd06fe",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "forget password api",
                  "fullTitle": "------Tasks API--------- post-api forget password api",
                  "timedOut": false,
                  "duration": 1694,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/forgotpass\")\n  .send({email : \"khus.vijay@gmail.com\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body.message).to.be.equal(\"please check your email\")\n    done();\n  });",
                  "err": {},
                  "uuid": "64f8a818-8481-4acf-998f-86e71dd110a1",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "forget password api when user not send the email",
                  "fullTitle": "------Tasks API--------- post-api forget password api when user not send the email",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/forgotpass\")\n  .send()\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    expect(response.body.message).to.be.equal(\"please enter the email\")\n    done();\n  });",
                  "err": {},
                  "uuid": "87e9c652-c457-41bc-b407-88b7b49d2c76",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "forget password api when user send the email which is not exists in the database",
                  "fullTitle": "------Tasks API--------- post-api forget password api when user send the email which is not exists in the database",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/forgotpass\")\n  .send({email : \"rav.dabi@gmail.com\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(404);\n    expect(response.body.message).to.be.equal(\"user not exists enter the valid email\")\n    done();\n  });",
                  "err": {},
                  "uuid": "f1e7b5b0-13fd-4081-99ad-7bbec4a6ceda",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "reset password api",
                  "fullTitle": "------Tasks API--------- post-api reset password api",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/resetpass\")\n  .send({email : \"khus.vijay@gmail.com\", newpassword : \"123\", confirmpassword : \"123\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body.message).to.be.equal(\"password reset successfully\")\n    done();\n  });",
                  "err": {},
                  "uuid": "03c0ae8b-302b-4229-a67b-10fc82c35450",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "reset password api when user not send the required fields",
                  "fullTitle": "------Tasks API--------- post-api reset password api when user not send the required fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/resetpass\")\n  .send()\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    expect(response.body.message).to.be.equal(\"please enter the required fields\")\n    done();\n  });",
                  "err": {},
                  "uuid": "900ba844-6d0a-4bb7-944a-c71fedca6d07",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "reset password api when user not send the same newPassword and confirmPassowrd",
                  "fullTitle": "------Tasks API--------- post-api reset password api when user not send the same newPassword and confirmPassowrd",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/api/user/resetpass\")\n  .send({email : \"khus.vijay@gmail.com\", newpassword : \"123\", confirmpassword : \"321\"})\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    expect(response.body.message).to.be.equal(\"new password and confirm password are not equal\")\n    done();\n  });",
                  "err": {},
                  "uuid": "9e19279d-aa77-4db8-b202-3aebd5e00a3e",
                  "parentUUID": "575e0dde-4815-49fa-9a7f-bf6b43f53c7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "010f2be7-891c-4008-96da-ced287b8184d",
                "4302b2a5-809a-44a4-aca5-ef9c3fede5e0",
                "541dff0c-09f0-44e0-bb34-0b080d4f526c",
                "88ec0a9f-42cd-4c56-9aba-e8e67489fba5",
                "6f3fd0b6-22b1-48b7-b02d-9c2dc0d2f29e",
                "943db580-6987-4cf1-99f9-ab8536ca5a49",
                "6a593397-ab38-4e84-9fb8-38d9a22994cf",
                "fe50f3b2-8063-40b6-b220-7df11fb111bc",
                "125c41be-c0c3-429c-a33f-116de8d16729",
                "dfa8efdb-f748-4b7e-bf4d-5607a7d02284",
                "d5340969-7096-4c31-bd5f-29e900193716",
                "fbca1fb1-698b-4b1e-ab44-3f1496de3d6c",
                "55278bcb-ef9c-4bf5-b233-783b04c9f715",
                "d637169f-fe6b-4b66-98a7-2ed438f86d36",
                "085d25d2-7ac8-472a-8e24-20454dc81c10",
                "89ef9b2e-c773-4606-9908-f93401a6f685",
                "1c4bb62c-fe27-44ec-a62e-d42057202109",
                "b58989f7-b490-4550-b0ba-dd5538dd06fe",
                "64f8a818-8481-4acf-998f-86e71dd110a1",
                "87e9c652-c457-41bc-b407-88b7b49d2c76",
                "f1e7b5b0-13fd-4081-99ad-7bbec4a6ceda",
                "03c0ae8b-302b-4229-a67b-10fc82c35450",
                "900ba844-6d0a-4bb7-944a-c71fedca6d07",
                "9e19279d-aa77-4db8-b202-3aebd5e00a3e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2075,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}